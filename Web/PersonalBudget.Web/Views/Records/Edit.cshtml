@model PersonalBudget.Web.ViewModels.Records.RecordViewModel

<div class="section_create">
    @if (this.TempData.ContainsKey("Message"))
    {
        <div class="alert alert-success mt-3 mb-5"><i class="fas fa-check-circle"></i> @this.TempData["Message"]</div>
    }
    <form method="post">

        <div class="form-group">
            <label asp-for="MemberId" class="control-label"></label>
            <select class="form-control" asp-for="MemberId" asp-items="Model.Members.Select(x=>new SelectListItem(x.Value,x.Key))" id="member">
                <option selected="">Изберете потребител</option>
            </select>
            <span asp-validation-for="MemberId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="SubCategoryId" class="control-label"></label>
            <select class="form-control" asp-for="SubCategoryId" asp-items="Model.Subcategories.Select(x=>new SelectListItem(x.Value,x.Key))" id="subcategory">
                <option selected="">Изберете подкатегория</option>
            </select>
            <span asp-validation-for="SubCategoryId" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ItemId" class="control-label"></label>
            <select class="form-control" asp-for="ItemId" asp-items="Model.Items.Select(x=>new SelectListItem(x.Value,x.Key))" id="item">
                <option selected="">Изберете продукт</option>
            </select>
            <span asp-validation-for="ItemId" class="text-danger"></span>
        </div>


        <div class="form-group ">
            <label asp-for="Quantity" class="control-label"></label>
            <input type="number" step="any" lang="nb" asp-for="Quantity" class="form-control quantity" id="quantity" />
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="MeasureUnitId" class="control-label"></label>
            <select class="form-control" asp-for="MeasureUnitId" asp-items="Model.MeasureUnits.Select(x=>new SelectListItem(x.Value,x.Key))" id="measureUnit">
            </select>
            <span asp-validation-for="MeasureUnitId" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="UnitPrice" class="control-label"></label>
            <input type="number" step="any" inputmode="numeric" lang="nb" asp-for="UnitPrice" class="form-control unitPrice" id="unitPrice" />
            <span asp-validation-for="UnitPrice" class="text-danger"></span>
        </div>
        <div class="form-group ">
            <label asp-for="ItemValue" class="control-label"></label>
            <input type="text" step="any" lang="nb" asp-for="ItemValue" class="form-control itemValue" onfocus="Calculate()" id="itemValue" />
            <span asp-validation-for="ItemValue" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="ExpireDate" class="control-label"></label>
            <input asp-for="ExpireDate" class="form-control" id="expireDate" />
            <span asp-validation-for="ExpireDate" class="text-danger"></span>
        </div>

        <div class="form-group float-right mt-3">
            <button class="btn_save"><i class="far fa-save"></i> Запази</button>
            <button class="btn_edit" asp-controller="Transfers" asp-action="Edit" asp-route-id="@Model.TransferId">Към трансфера</button>
        </div>
    </form>
</div>

@section Scripts{


    <script>
        function Calculate() {
            var itemValue = document.getElementById('itemValue')
            var quantity = document.getElementById('quantity');
            var unitPrice = document.getElementById('unitPrice');
            itemValue.value = parseFloat(quantity.value * unitPrice.value).toFixed(2);

        }
    </script>
    <partial name="_ValidationScriptsPartial" />


}
